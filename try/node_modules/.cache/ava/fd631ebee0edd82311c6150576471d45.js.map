{"version":3,"sources":["ava.js"],"names":["test","require","promise","Promise","reject","TypeError","t","throws","resolve","cb","plan","is","end"],"mappings":";;;;;;;;;;;;;;;;AAAA,MAAM,EAACA,IAAD,KAASC,QAAQ,KAAR,CAAf;AACA,MAAMC,UAAUC,QAAQC,MAAR,CAAe,IAAIC,SAAJ,CAAc,IAAd,CAAf,CAAhB;;AAEAL,KAAK,SAAL,EAAgB,MAAMM,CAAN,IAAW;AAC1B,OAAMA,EAAEC,MAAF,kGAASL,OAAT,GAAN;AACA;AACA,CAHD;;AAKAF,KAAK,SAAL,EAAeM,KAAK;AACnBH,SAAQK,OAAR,CAAgB,CAAhB;AACA,CAFD;;AAIAR,KAAK,eAAL,EAAsB,MAAMM,CAAN,IAAW;AAChC,OAAMH,QAAQK,OAAR,CAAgB,CAAhB,CAAN;AACA,CAFD;;AAIAR,KAAKS,EAAL,CAAQ,IAAR,EAAcH,CAAD,IAAK;AAClBA,GAAEI,IAAF,CAAO,CAAP;AACAJ,GAAEK,EAAF,CAAK,CAAL,EAAO,CAAP;AACAL,GAAEM,GAAF;AACC,CAJD;;AAMAZ,KAAK,MAAL,EAAaM,CAAD,IAAK;AACjBA,GAAEI,IAAF,CAAO,CAAP;AACAJ,GAAEK,EAAF,CAAK,CAAL,EAAO,CAAP;AACC,CAHD","file":"ava.js","sourcesContent":["const {test} = require('ava');\nconst promise = Promise.reject(new TypeError('ğŸ¦„'));\n\ntest('rejects', async t => {\n\tawait t.throws(promise);\n\t//t.is(error.message, 'ğŸ¦„');\n});\n\ntest('promise',t => {\n\tPromise.resolve(1);\n});\n\ntest('promise&async', async t => {\n\tawait Promise.resolve(1);\n});\n\ntest.cb('cb',(t)=>{\nt.plan(1);\nt.is(1,1);\nt.end();\n});\n\ntest('test',(t)=>{\nt.plan(1);\nt.is(1,1);\n});\n\n\n\n"]}