{"version":3,"sources":["ava.js"],"names":["test","require","promise","Promise","reject","TypeError","t","error","throws","is","message","cb","plan"],"mappings":";;;;;;;;;;;;;;;;AAAA,MAAM,EAACA,IAAD,KAASC,QAAQ,KAAR,CAAf;AACA,MAAMC,UAAUC,QAAQC,MAAR,CAAe,IAAIC,SAAJ,CAAc,IAAd,CAAf,CAAhB;;AAEAL,KAAK,SAAL,EAAgB,MAAMM,CAAN,IAAW;AAC1B,OAAMC,QAAQ,MAAMD,EAAEE,MAAF,kGAASN,OAAT,GAApB;AACAI,GAAEG,EAAF,CAAKF,MAAMG,OAAX,EAAoB,IAApB;AACA,CAHD;;AAKAV,KAAKW,EAAL,CAAQ,IAAR,EAAcL,CAAD,IAAK;AAClBA,GAAEM,IAAF,CAAO,CAAP;AACAN,GAAEG,EAAF,CAAK,CAAL,EAAO,CAAP;AACC,CAHD;;AAKAT,KAAK,MAAL,EAAaM,CAAD,IAAK;AACjBA,GAAEM,IAAF,CAAO,CAAP;AACAN,GAAEG,EAAF,CAAK,CAAL,EAAO,CAAP;AACC,CAHD","file":"ava.js","sourcesContent":["const {test} = require('ava');\nconst promise = Promise.reject(new TypeError('ğŸ¦„'));\n\ntest('rejects', async t => {\n\tconst error = await t.throws(promise);\n\tt.is(error.message, 'ğŸ¦„');\n});\n\ntest.cb('cb',(t)=>{\nt.plan(1);\nt.is(1,2);\n});\n\ntest('test',(t)=>{\nt.plan(1);\nt.is(1,1);\n});\n\n\n\n"]}